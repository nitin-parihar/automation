name: Setup Gogs and Create Repo

on:
  workflow_dispatch:  # Allows manual trigger from GitHub UI

jobs:
  gogs-automation:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Start Gogs with Docker Compose
      run: docker-compose up --build -d

    - name: Wait for Gogs to be ready
      run: |
        echo "Waiting for Gogs to be ready..."
        for i in {1..30}; do
          if curl -s http://localhost:3000 | grep -q "Gogs"; then
            echo "Gogs is up!"
            break
          fi
          sleep 2
        done

    - name: Create admin user inside Gogs container
      run: |
        docker exec -u git custom-gogs /app/gogs/gogs admin create-user \
          --name gogsadmin \
          --password admin123 \
          --email you@example.com \
          --admin || echo "User might already exist, skipping..."

    - name: Generate API token
      id: token
      run: |
        TOKEN_RESPONSE=$(curl -s -X POST "http://localhost:3000/api/v1/users/gogsadmin/tokens" \
          -u "gogsadmin:admin123" \
          -H "Content-Type: application/json" \
          -d '{"name": "mytoken"}')
        
        echo "$TOKEN_RESPONSE"
        TOKEN=$(echo "$TOKEN_RESPONSE" | jq -r '.sha1')
        echo "token=$TOKEN" >> $GITHUB_OUTPUT

    - name: Create repository using token
      run: |
        curl -X POST -H "Authorization: token ${{ steps.token.outputs.token }}" \
             -H "Content-Type: application/json" \
             -d '{"name":"my-new-repo","private":false}' \
             http://localhost:3000/api/v1/user/repos
